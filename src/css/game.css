body{
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
    align-items: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    background-color: #212121;
    color: white;
}

#juegoContainer{
  display: grid;
  grid-template-columns: 200px 1fr;
  grid-template-rows: repeat(2, 1fr);
  grid-template-areas: "menulateral contenido";
  height: 100vh;
}

#menu-lateral{
  grid-area: "menulateral";
  background-color: #F8F9FA;
  height: 100vh !important;
}
#contenido{
  grid-area: "contenido";
}

#modoModal{
  max-width:600px;
  width:100%;
}

#overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 2000;
  /*background: rgba(30, 30, 30, 0.7);*/
  background: #F8F9FA;
  display: flex;
  align-items: center;
  justify-content: center;
}

#pvp:hover{
  cursor: pointer;
}
#cpu:hover{
  cursor: pointer;
}
#online:hover{
  cursor: pointer;
}

.card:hover{
  filter: brightness(85%);
}


#player{
    position: relative;
    font-size: 40px;
    bottom: 10px;
}
#resultado{
    position: relative;
    top: 330px;
    font-size: 20px;
}

.show{
    display: block !important;
}

.game-section{
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
}

#board{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 10px !important;
    margin: 20px auto;
    width: 300px;
    height: 300px;
    right: 0;
    left: 0;
    top: 60px;
    bottom: 0;
    position: absolute;
    margin: auto;
    background: white; /* El color de las líneas divisorias */
    padding: 0;
    border-radius: 13px !important;
}

.cell{
    background-color: #212121;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 5em;
    cursor: pointer;
    position: relative;
    border-radius: 0 !important;
}

#board .cell:nth-child(1) { border-top-left-radius: 10px; }
#board .cell:nth-child(3) { border-top-right-radius: 10px; }
#board .cell:nth-child(7) { border-bottom-left-radius: 10px; }
#board .cell:nth-child(9) { border-bottom-right-radius: 10px; }

#board .cell.hover-impar:hover {
    background-color: red !important; /* Ejemplo: rojo claro */
}
#board .cell.hover-par:hover {
    background-color: #007bff !important; /* Ejemplo: azul claro */
}


.par{
    color: #007bff;
}

.impar{
    color: red;
}

#board .num{
    width: 100%;
    height: 100%;
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
    position: absolute;
}

.content{
    width: 50%;
    position: absolute;
    z-index: 2;
    border-radius: 10px;
    overflow: hidden;
    display: none;
}

/*boton*/
.button {
  position: relative;
  bottom: 20px;
  /* in scss with just one variable i can change opacity with rgba(variable, opacity) but in css it's not possible so i have used three seperate variables */
  /* with hue-rotate color can be changed */
  --main-color: rgb(46, 213, 115);
  --main-bg-color: rgba(46, 213, 116, 0.36);
  --pattern-color: rgba(46, 213, 116, 0.073);

  /* change this rotation value */
  filter: hue-rotate(0deg);

  cursor: pointer;
  text-transform: uppercase;
  letter-spacing: 0.5rem;
  background: radial-gradient(
      circle,
      var(--main-bg-color) 0%,
      rgba(0, 0, 0, 0) 95%
    ),
    linear-gradient(var(--pattern-color) 1px, transparent 1px),
    linear-gradient(to right, var(--pattern-color) 1px, transparent 1px);
  background-size:
    cover,
    15px 15px,
    15px 15px;
  background-position:
    center center,
    center center,
    center center;
  border-image: radial-gradient(
      circle,
      var(--main-color) 0%,
      rgba(0, 0, 0, 0) 100%
    )
    1;
  border-width: 1px 0 1px 0;
  color: var(--main-color);
  padding: 1rem 3rem;
  font-weight: 700;
  font-size: 1.5rem;
  transition: background-size 0.2s ease-in-out;
}

.button:hover {
  background-size:
    cover,
    10px 10px,
    10px 10px;
}
.button:active {
  filter: hue-rotate(250deg);
}

#overlay {
  z-index: 3000 !important;
  display: flex;
}
#overlay.oculto {
  display: none !important;
}

body.modal-abierto {
  overflow: hidden;
}

/* Mejoras visuales para el modal de selección de modo */
#modoModal {
  max-width: 500px;
  width: 100%;
  margin: 0 auto;
  border: none;
}

#modoModal .modal-body {
  padding: 2.5rem 1.5rem;
}

.card.cursor-pointer {
  transition: transform 0.15s, box-shadow 0.15s;
  border-radius: 1rem;
  border: none;
  box-shadow: 0 2px 12px rgba(0,0,0,0.08);
}
.card.cursor-pointer:hover, .card.cursor-pointer:focus {
  transform: translateY(-6px) scale(1.04);
  box-shadow: 0 6px 24px rgba(0,0,0,0.16);
  background: #f8f9fa;
}

.icon-large {
  font-size: 2.5rem;
  line-height: 1;
}

.card-body span {
  display: block;
  margin-top: 0.5rem;
}

@media (max-width: 600px) {
  #modoModal {
    max-width: 98vw;
    padding: 0.5rem;
  }
  #modoModal .modal-body {
    padding: 1rem 0.5rem;
  }
}


.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.08);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal-modo-juego {
  background: #fff;
  border-radius: 20px;
  box-shadow: 0 4px 24px rgba(0, 0, 0, 0.10);
  padding: 2.5rem 2rem 2rem 2rem;
  min-width: 340px;
  max-width: 95vw;
  text-align: center;
}

.modal-title {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 2rem;
  color: #22223b;
}

.modal-options {
  display: flex;
  gap: 1.5rem;
  justify-content: center;
  flex-wrap: wrap;
}

.option-card {
  background: #f3f4f6;
  border-radius: 16px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
  padding: 1.5rem 1.2rem 1.2rem 1.2rem;
  width: 9rem;
  cursor: pointer;
  transition: transform 0.18s, box-shadow 0.18s;
  display: flex;
  flex-direction: column;
  align-items: center;
  border: none;
}

.option-card:hover:not(.option-disabled) {
  transform: scale(1.06);
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.10);
}

.option-icon {
  margin-bottom: 0.7rem;
}

.option-text {
  font-size: 1.1rem;
  font-weight: 500;
  color: #22223b;
}

.bg-green {
  background: #d1fae5;
}

.bg-blue {
  background: #dbeafe;
}

.bg-purple {
  background: #f3e8ff;
}

.option-disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

@media (max-width: 600px) {
  .modal-options {
      flex-direction: column;
      gap: 1rem;
  }

  .option-card {
      width: 100%;
  }
}

.linea-ganadora {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 2000;
  /* Animación para la línea ganadora */
}

.linea-animada {
  transition: transform 0.5s cubic-bezier(0.4, 0.2, 0.2, 1), width 0.5s cubic-bezier(0.4, 0.2, 0.2, 1), height 0.5s cubic-bezier(0.4, 0.2, 0.2, 1);
  transform-origin: left center;
  transform: scaleX(0);
}

.linea-animada.mostrar {
  transform: scaleX(1);
}

.linea-animada-horizontal {
  width: 0;
  transition: width 0.5s cubic-bezier(0.4, 0.2, 0.2, 1);
}
.linea-animada-horizontal.mostrar {
  width: 100% !important;
}

.linea-animada-vertical {
  height: 0;
  transition: height 0.5s cubic-bezier(0.4, 0.2, 0.2, 1);
}
.linea-animada-vertical.mostrar {
  height: 100% !important;
}

.linea-animada-diagonal {
  width: 0;
  transition: width 0.5s cubic-bezier(0.4, 0.2, 0.2, 1);
}
.linea-animada-diagonal.mostrar {
  width: 141% !important;
}

#board {
  position: relative;
}